# Workflow to build and push the imgages for the schulcloud antivirus service 
# Tagging of the images push to Docker Hub  will follow the branch based naming conventions
# use in sc-app-ci to allow deploying the images on team machines  

name: sc-app-build-push

# Controls when the action will run.
on:
  workflow_dispatch:
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "deploy"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      # Setting environment variables here make them available for all steps
      AVSCANFILE_REPO: schulcloud-avcheck-scanfile
      AVSCANURL_REPO: schulcloud-avcheck-scanurl
      AVSCANWEBSERVER_REPO: schulcloud-avcheck-webserver
      DOCKER_NAMESPACE: schulcloud

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it must be on first place to allow central setting of working directory
      - uses: actions/checkout@v2
      - name: Read version file
        id: version
        uses: juliangruber/read-file-action@v1
        with:
          path: ./version
      - name: Echo version
        run: echo Version of antivirus_service is '${{ steps.version.outputs.content }}'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}
      - name: Build and push ${{ env.AVSCANFILE_REPO }}
        id: docker_build
        uses: docker/build-push-action@v2.2.1
        with:
          context: .
          file: ./Dockerfile.scanfile
          push: true
          tags: |
            ${{ env.DOCKER_NAMESPACE }}/${{ env.AVSCANFILE_REPO }}:${{ env.AVSCANFILE_REPO }}_v${{ steps.version.outputs.content }}
